# Generated by Django 3.2.8 on 2021-11-09 05:57

from django.db import migrations, models
import django.db.models.deletion
import sloth.core.base
import sloth.db.models


class Migration(migrations.Migration):

    dependencies = [
        ('investimentos', '0005_auto_20211108_2258'),
    ]

    operations = [
        migrations.CreateModel(
            name='OpcaoResposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', sloth.db.models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Opção de Resposta',
                'verbose_name_plural': 'Opções de Resposta',
            },
            bases=(models.Model, sloth.core.base.ModelMixin),
        ),
        migrations.AlterField(
            model_name='ano',
            name='ano',
            field=models.IntegerField(verbose_name='Ano'),
        ),
        migrations.CreateModel(
            name='Pergunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(verbose_name='Texto')),
                ('obrigatoria', models.BooleanField(blank=True, verbose_name='Obrigatória')),
                ('tipo_resposta', models.IntegerField(verbose_name='Tipo de Resposta')),
                ('categoria', sloth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='investimentos.categoria', verbose_name='Categoria')),
                ('opcoes', sloth.db.models.OneToManyField(blank=True, to='investimentos.OpcaoResposta', verbose_name='Opções de Resposta')),
            ],
            options={
                'verbose_name': 'Pergunta',
                'verbose_name_plural': 'Perguntas',
                'fieldsets': {'Dados Gerais': ('texto', 'tipo_resposta', 'obrigtoria'), 'Opções': ('opcoes',)},
            },
            bases=(models.Model, sloth.core.base.ModelMixin),
        ),
    ]
